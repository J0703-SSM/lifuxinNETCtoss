<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--注入hibernate -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- 声明验证的提供者是Hibernate -->
        <property name="providerClass"
                  value="org.hibernate.validator.HibernateValidator">
        </property>
    </bean>
    <!--声明注解-->
    <mvc:annotation-driven validator="validator"/>

    <!-- 引入db属性-->
    <context:property-placeholder location="classpath*:db.properties"/>
    <!-- 加入注解扫描 -->
    <mvc:annotation-driven/>
    <!-- 注解扫描的根路径 -->
    <context:component-scan base-package="com.lanou"/>
    <!-- springMVC第一条:将静态页面的处理交由服务器自己处理,springMVC不处理 -->
    <mvc:default-servlet-handler/>
    <!-- 配置静态资源对应的路径,告诉springmvc不用处理这些路径 -->
    <mvc:resources mapping="images/**" location="/images/"/>
    <mvc:resources mapping="styles/**" location="/styles/"/>
    <mvc:resources mapping="js/**" location="/js/"/>

    <!-- springMVC第二条: 配置视图解析规则 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 配置视图解析的前缀 -->
        <property name="prefix" value="/WEB-INF/pages/"/>
        <!-- 配置视图解析的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- 1.配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${name}"/>
        <property name="password" value="${password}"/>
    </bean>
    <!-- 2.配置SqlSessionFactory -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 引入mybatis的配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- 3. 配置事务-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 4.配置事物属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <!--5.配置切面-->
    <aop:config>
        <aop:pointcut id="pointCut" expression="execution(* com.lanou.mapper.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>
    </aop:config>
    <!--配置mybatis中的mapper接口自动扫描 -->
    <bean id="configurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- mapper接口代理对象所在的包 -->
        <property name="basePackage" value="com.lanou.mapper"/>
        <!-- 定义sessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>
    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <!-- 拦截器执行的顺序依照下面的顺序执行 -->
        <mvc:interceptor>
            <!-- 要拦截的请求路径 -->
            <mvc:mapping path="/*"/>
            <mvc:exclude-mapping path="/getVerifyCode"/>
            <!-- 拦截器所对应的类路径 -->
            <bean class="com.lanou.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>